
DIO.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000306  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  0000035a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  0000035a  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  0000038c  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000060  00000000  00000000  000003c8  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000007c3  00000000  00000000  00000428  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000005e7  00000000  00000000  00000beb  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000003a2  00000000  00000000  000011d2  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000088  00000000  00000000  00001574  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000037e  00000000  00000000  000015fc  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000002d7  00000000  00000000  0000197a  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000040  00000000  00000000  00001c51  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 36 00 	call	0x6c	; 0x6c <main>
  64:	0c 94 81 01 	jmp	0x302	; 0x302 <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <main>:
#include	<util/delay.h>

int main(void)
{
	//DIO_voidSetPinDirection(PORTC , PIN7 , OUTPUT);
	DIO_voidSetPortDirection(PORTA	,	OUTPUT);
  6c:	61 e0       	ldi	r22, 0x01	; 1
  6e:	80 e0       	ldi	r24, 0x00	; 0
  70:	0e 94 35 01 	call	0x26a	; 0x26a <DIO_voidSetPortDirection>
	DIO_voidSetPinDirection(PORTB , PIN1 , OUTPUT);
  74:	41 e0       	ldi	r20, 0x01	; 1
  76:	61 e0       	ldi	r22, 0x01	; 1
  78:	81 e0       	ldi	r24, 0x01	; 1
  7a:	0e 94 49 00 	call	0x92	; 0x92 <DIO_voidSetPinDirection>
		}
		*/

		
		/*		7-SEGMENTs			*/
		DIO_voidSetPinValue(PORTB , PIN1 , HIGH);
  7e:	41 e0       	ldi	r20, 0x01	; 1
  80:	61 e0       	ldi	r22, 0x01	; 1
  82:	81 e0       	ldi	r24, 0x01	; 1
  84:	0e 94 bf 00 	call	0x17e	; 0x17e <DIO_voidSetPinValue>
		DIO_voidSetPinValue(PORTA , PIN2 , HIGH);
		DIO_voidSetPinValue(PORTA , PIN3 , HIGH);
		DIO_voidSetPinValue(PORTA , PIN4 , HIGH);
		DIO_voidSetPinValue(PORTA , PIN5 , HIGH);*/
		
		DIO_voidSetPortValue(PORTA , 0xf0);
  88:	60 ef       	ldi	r22, 0xF0	; 240
  8a:	80 e0       	ldi	r24, 0x00	; 0
  8c:	0e 94 5b 01 	call	0x2b6	; 0x2b6 <DIO_voidSetPortValue>
  90:	f6 cf       	rjmp	.-20     	; 0x7e <main+0x12>

00000092 <DIO_voidSetPinDirection>:
				case PORTC :	Local_u8Value	=	GET_BIT(PINC_REG,Pin);	break;
				case PORTD :	Local_u8Value	=	GET_BIT(PIND_REG,Pin);	break;
			}		
	}		
	return Local_u8Value ;
}
  92:	84 30       	cpi	r24, 0x04	; 4
  94:	08 f0       	brcs	.+2      	; 0x98 <DIO_voidSetPinDirection+0x6>
  96:	72 c0       	rjmp	.+228    	; 0x17c <DIO_voidSetPinDirection+0xea>
  98:	68 30       	cpi	r22, 0x08	; 8
  9a:	08 f0       	brcs	.+2      	; 0x9e <DIO_voidSetPinDirection+0xc>
  9c:	6f c0       	rjmp	.+222    	; 0x17c <DIO_voidSetPinDirection+0xea>
  9e:	41 30       	cpi	r20, 0x01	; 1
  a0:	a1 f5       	brne	.+104    	; 0x10a <DIO_voidSetPinDirection+0x78>
  a2:	81 30       	cpi	r24, 0x01	; 1
  a4:	89 f0       	breq	.+34     	; 0xc8 <DIO_voidSetPinDirection+0x36>
  a6:	28 f0       	brcs	.+10     	; 0xb2 <DIO_voidSetPinDirection+0x20>
  a8:	82 30       	cpi	r24, 0x02	; 2
  aa:	c9 f0       	breq	.+50     	; 0xde <DIO_voidSetPinDirection+0x4c>
  ac:	83 30       	cpi	r24, 0x03	; 3
  ae:	11 f1       	breq	.+68     	; 0xf4 <DIO_voidSetPinDirection+0x62>
  b0:	08 95       	ret
  b2:	2a b3       	in	r18, 0x1a	; 26
  b4:	81 e0       	ldi	r24, 0x01	; 1
  b6:	90 e0       	ldi	r25, 0x00	; 0
  b8:	02 c0       	rjmp	.+4      	; 0xbe <DIO_voidSetPinDirection+0x2c>
  ba:	88 0f       	add	r24, r24
  bc:	99 1f       	adc	r25, r25
  be:	6a 95       	dec	r22
  c0:	e2 f7       	brpl	.-8      	; 0xba <DIO_voidSetPinDirection+0x28>
  c2:	82 2b       	or	r24, r18
  c4:	8a bb       	out	0x1a, r24	; 26
  c6:	08 95       	ret
  c8:	27 b3       	in	r18, 0x17	; 23
  ca:	81 e0       	ldi	r24, 0x01	; 1
  cc:	90 e0       	ldi	r25, 0x00	; 0
  ce:	02 c0       	rjmp	.+4      	; 0xd4 <DIO_voidSetPinDirection+0x42>
  d0:	88 0f       	add	r24, r24
  d2:	99 1f       	adc	r25, r25
  d4:	6a 95       	dec	r22
  d6:	e2 f7       	brpl	.-8      	; 0xd0 <DIO_voidSetPinDirection+0x3e>
  d8:	82 2b       	or	r24, r18
  da:	87 bb       	out	0x17, r24	; 23
  dc:	08 95       	ret
  de:	24 b3       	in	r18, 0x14	; 20
  e0:	81 e0       	ldi	r24, 0x01	; 1
  e2:	90 e0       	ldi	r25, 0x00	; 0
  e4:	02 c0       	rjmp	.+4      	; 0xea <DIO_voidSetPinDirection+0x58>
  e6:	88 0f       	add	r24, r24
  e8:	99 1f       	adc	r25, r25
  ea:	6a 95       	dec	r22
  ec:	e2 f7       	brpl	.-8      	; 0xe6 <DIO_voidSetPinDirection+0x54>
  ee:	82 2b       	or	r24, r18
  f0:	84 bb       	out	0x14, r24	; 20
  f2:	08 95       	ret
  f4:	21 b3       	in	r18, 0x11	; 17
  f6:	81 e0       	ldi	r24, 0x01	; 1
  f8:	90 e0       	ldi	r25, 0x00	; 0
  fa:	02 c0       	rjmp	.+4      	; 0x100 <DIO_voidSetPinDirection+0x6e>
  fc:	88 0f       	add	r24, r24
  fe:	99 1f       	adc	r25, r25
 100:	6a 95       	dec	r22
 102:	e2 f7       	brpl	.-8      	; 0xfc <DIO_voidSetPinDirection+0x6a>
 104:	82 2b       	or	r24, r18
 106:	81 bb       	out	0x11, r24	; 17
 108:	08 95       	ret
 10a:	41 11       	cpse	r20, r1
 10c:	37 c0       	rjmp	.+110    	; 0x17c <DIO_voidSetPinDirection+0xea>
 10e:	81 30       	cpi	r24, 0x01	; 1
 110:	91 f0       	breq	.+36     	; 0x136 <DIO_voidSetPinDirection+0xa4>
 112:	28 f0       	brcs	.+10     	; 0x11e <DIO_voidSetPinDirection+0x8c>
 114:	82 30       	cpi	r24, 0x02	; 2
 116:	d9 f0       	breq	.+54     	; 0x14e <DIO_voidSetPinDirection+0xbc>
 118:	83 30       	cpi	r24, 0x03	; 3
 11a:	29 f1       	breq	.+74     	; 0x166 <DIO_voidSetPinDirection+0xd4>
 11c:	08 95       	ret
 11e:	2a b3       	in	r18, 0x1a	; 26
 120:	81 e0       	ldi	r24, 0x01	; 1
 122:	90 e0       	ldi	r25, 0x00	; 0
 124:	02 c0       	rjmp	.+4      	; 0x12a <DIO_voidSetPinDirection+0x98>
 126:	88 0f       	add	r24, r24
 128:	99 1f       	adc	r25, r25
 12a:	6a 95       	dec	r22
 12c:	e2 f7       	brpl	.-8      	; 0x126 <DIO_voidSetPinDirection+0x94>
 12e:	80 95       	com	r24
 130:	82 23       	and	r24, r18
 132:	8a bb       	out	0x1a, r24	; 26
 134:	08 95       	ret
 136:	27 b3       	in	r18, 0x17	; 23
 138:	81 e0       	ldi	r24, 0x01	; 1
 13a:	90 e0       	ldi	r25, 0x00	; 0
 13c:	02 c0       	rjmp	.+4      	; 0x142 <DIO_voidSetPinDirection+0xb0>
 13e:	88 0f       	add	r24, r24
 140:	99 1f       	adc	r25, r25
 142:	6a 95       	dec	r22
 144:	e2 f7       	brpl	.-8      	; 0x13e <DIO_voidSetPinDirection+0xac>
 146:	80 95       	com	r24
 148:	82 23       	and	r24, r18
 14a:	87 bb       	out	0x17, r24	; 23
 14c:	08 95       	ret
 14e:	24 b3       	in	r18, 0x14	; 20
 150:	81 e0       	ldi	r24, 0x01	; 1
 152:	90 e0       	ldi	r25, 0x00	; 0
 154:	02 c0       	rjmp	.+4      	; 0x15a <DIO_voidSetPinDirection+0xc8>
 156:	88 0f       	add	r24, r24
 158:	99 1f       	adc	r25, r25
 15a:	6a 95       	dec	r22
 15c:	e2 f7       	brpl	.-8      	; 0x156 <DIO_voidSetPinDirection+0xc4>
 15e:	80 95       	com	r24
 160:	82 23       	and	r24, r18
 162:	84 bb       	out	0x14, r24	; 20
 164:	08 95       	ret
 166:	21 b3       	in	r18, 0x11	; 17
 168:	81 e0       	ldi	r24, 0x01	; 1
 16a:	90 e0       	ldi	r25, 0x00	; 0
 16c:	02 c0       	rjmp	.+4      	; 0x172 <DIO_voidSetPinDirection+0xe0>
 16e:	88 0f       	add	r24, r24
 170:	99 1f       	adc	r25, r25
 172:	6a 95       	dec	r22
 174:	e2 f7       	brpl	.-8      	; 0x16e <DIO_voidSetPinDirection+0xdc>
 176:	80 95       	com	r24
 178:	82 23       	and	r24, r18
 17a:	81 bb       	out	0x11, r24	; 17
 17c:	08 95       	ret

0000017e <DIO_voidSetPinValue>:
 17e:	84 30       	cpi	r24, 0x04	; 4
 180:	08 f0       	brcs	.+2      	; 0x184 <DIO_voidSetPinValue+0x6>
 182:	72 c0       	rjmp	.+228    	; 0x268 <DIO_voidSetPinValue+0xea>
 184:	68 30       	cpi	r22, 0x08	; 8
 186:	08 f0       	brcs	.+2      	; 0x18a <DIO_voidSetPinValue+0xc>
 188:	6f c0       	rjmp	.+222    	; 0x268 <DIO_voidSetPinValue+0xea>
 18a:	41 30       	cpi	r20, 0x01	; 1
 18c:	a1 f5       	brne	.+104    	; 0x1f6 <DIO_voidSetPinValue+0x78>
 18e:	81 30       	cpi	r24, 0x01	; 1
 190:	89 f0       	breq	.+34     	; 0x1b4 <DIO_voidSetPinValue+0x36>
 192:	28 f0       	brcs	.+10     	; 0x19e <DIO_voidSetPinValue+0x20>
 194:	82 30       	cpi	r24, 0x02	; 2
 196:	c9 f0       	breq	.+50     	; 0x1ca <DIO_voidSetPinValue+0x4c>
 198:	83 30       	cpi	r24, 0x03	; 3
 19a:	11 f1       	breq	.+68     	; 0x1e0 <DIO_voidSetPinValue+0x62>
 19c:	08 95       	ret
 19e:	2b b3       	in	r18, 0x1b	; 27
 1a0:	81 e0       	ldi	r24, 0x01	; 1
 1a2:	90 e0       	ldi	r25, 0x00	; 0
 1a4:	02 c0       	rjmp	.+4      	; 0x1aa <DIO_voidSetPinValue+0x2c>
 1a6:	88 0f       	add	r24, r24
 1a8:	99 1f       	adc	r25, r25
 1aa:	6a 95       	dec	r22
 1ac:	e2 f7       	brpl	.-8      	; 0x1a6 <DIO_voidSetPinValue+0x28>
 1ae:	82 2b       	or	r24, r18
 1b0:	8b bb       	out	0x1b, r24	; 27
 1b2:	08 95       	ret
 1b4:	28 b3       	in	r18, 0x18	; 24
 1b6:	81 e0       	ldi	r24, 0x01	; 1
 1b8:	90 e0       	ldi	r25, 0x00	; 0
 1ba:	02 c0       	rjmp	.+4      	; 0x1c0 <DIO_voidSetPinValue+0x42>
 1bc:	88 0f       	add	r24, r24
 1be:	99 1f       	adc	r25, r25
 1c0:	6a 95       	dec	r22
 1c2:	e2 f7       	brpl	.-8      	; 0x1bc <DIO_voidSetPinValue+0x3e>
 1c4:	82 2b       	or	r24, r18
 1c6:	88 bb       	out	0x18, r24	; 24
 1c8:	08 95       	ret
 1ca:	25 b3       	in	r18, 0x15	; 21
 1cc:	81 e0       	ldi	r24, 0x01	; 1
 1ce:	90 e0       	ldi	r25, 0x00	; 0
 1d0:	02 c0       	rjmp	.+4      	; 0x1d6 <DIO_voidSetPinValue+0x58>
 1d2:	88 0f       	add	r24, r24
 1d4:	99 1f       	adc	r25, r25
 1d6:	6a 95       	dec	r22
 1d8:	e2 f7       	brpl	.-8      	; 0x1d2 <DIO_voidSetPinValue+0x54>
 1da:	82 2b       	or	r24, r18
 1dc:	85 bb       	out	0x15, r24	; 21
 1de:	08 95       	ret
 1e0:	22 b3       	in	r18, 0x12	; 18
 1e2:	81 e0       	ldi	r24, 0x01	; 1
 1e4:	90 e0       	ldi	r25, 0x00	; 0
 1e6:	02 c0       	rjmp	.+4      	; 0x1ec <DIO_voidSetPinValue+0x6e>
 1e8:	88 0f       	add	r24, r24
 1ea:	99 1f       	adc	r25, r25
 1ec:	6a 95       	dec	r22
 1ee:	e2 f7       	brpl	.-8      	; 0x1e8 <DIO_voidSetPinValue+0x6a>
 1f0:	82 2b       	or	r24, r18
 1f2:	82 bb       	out	0x12, r24	; 18
 1f4:	08 95       	ret
 1f6:	41 11       	cpse	r20, r1
 1f8:	37 c0       	rjmp	.+110    	; 0x268 <DIO_voidSetPinValue+0xea>
 1fa:	81 30       	cpi	r24, 0x01	; 1
 1fc:	91 f0       	breq	.+36     	; 0x222 <DIO_voidSetPinValue+0xa4>
 1fe:	28 f0       	brcs	.+10     	; 0x20a <DIO_voidSetPinValue+0x8c>
 200:	82 30       	cpi	r24, 0x02	; 2
 202:	d9 f0       	breq	.+54     	; 0x23a <DIO_voidSetPinValue+0xbc>
 204:	83 30       	cpi	r24, 0x03	; 3
 206:	29 f1       	breq	.+74     	; 0x252 <DIO_voidSetPinValue+0xd4>
 208:	08 95       	ret
 20a:	2b b3       	in	r18, 0x1b	; 27
 20c:	81 e0       	ldi	r24, 0x01	; 1
 20e:	90 e0       	ldi	r25, 0x00	; 0
 210:	02 c0       	rjmp	.+4      	; 0x216 <DIO_voidSetPinValue+0x98>
 212:	88 0f       	add	r24, r24
 214:	99 1f       	adc	r25, r25
 216:	6a 95       	dec	r22
 218:	e2 f7       	brpl	.-8      	; 0x212 <DIO_voidSetPinValue+0x94>
 21a:	80 95       	com	r24
 21c:	82 23       	and	r24, r18
 21e:	8b bb       	out	0x1b, r24	; 27
 220:	08 95       	ret
 222:	28 b3       	in	r18, 0x18	; 24
 224:	81 e0       	ldi	r24, 0x01	; 1
 226:	90 e0       	ldi	r25, 0x00	; 0
 228:	02 c0       	rjmp	.+4      	; 0x22e <DIO_voidSetPinValue+0xb0>
 22a:	88 0f       	add	r24, r24
 22c:	99 1f       	adc	r25, r25
 22e:	6a 95       	dec	r22
 230:	e2 f7       	brpl	.-8      	; 0x22a <DIO_voidSetPinValue+0xac>
 232:	80 95       	com	r24
 234:	82 23       	and	r24, r18
 236:	88 bb       	out	0x18, r24	; 24
 238:	08 95       	ret
 23a:	25 b3       	in	r18, 0x15	; 21
 23c:	81 e0       	ldi	r24, 0x01	; 1
 23e:	90 e0       	ldi	r25, 0x00	; 0
 240:	02 c0       	rjmp	.+4      	; 0x246 <DIO_voidSetPinValue+0xc8>
 242:	88 0f       	add	r24, r24
 244:	99 1f       	adc	r25, r25
 246:	6a 95       	dec	r22
 248:	e2 f7       	brpl	.-8      	; 0x242 <DIO_voidSetPinValue+0xc4>
 24a:	80 95       	com	r24
 24c:	82 23       	and	r24, r18
 24e:	85 bb       	out	0x15, r24	; 21
 250:	08 95       	ret
 252:	22 b3       	in	r18, 0x12	; 18
 254:	81 e0       	ldi	r24, 0x01	; 1
 256:	90 e0       	ldi	r25, 0x00	; 0
 258:	02 c0       	rjmp	.+4      	; 0x25e <DIO_voidSetPinValue+0xe0>
 25a:	88 0f       	add	r24, r24
 25c:	99 1f       	adc	r25, r25
 25e:	6a 95       	dec	r22
 260:	e2 f7       	brpl	.-8      	; 0x25a <DIO_voidSetPinValue+0xdc>
 262:	80 95       	com	r24
 264:	82 23       	and	r24, r18
 266:	82 bb       	out	0x12, r24	; 18
 268:	08 95       	ret

0000026a <DIO_voidSetPortDirection>:

void	DIO_voidSetPortDirection(u8 Port ,u8 Direction ) // this port will be used as i/p or o/p
{
	/*		Range Check				*/
	if( (Port < 4) )
 26a:	84 30       	cpi	r24, 0x04	; 4
 26c:	18 f5       	brcc	.+70     	; 0x2b4 <DIO_voidSetPortDirection+0x4a>
	{
		if(Direction == OUTPUT)
 26e:	61 30       	cpi	r22, 0x01	; 1
 270:	81 f4       	brne	.+32     	; 0x292 <DIO_voidSetPortDirection+0x28>
		{
			switch(Port)
 272:	81 30       	cpi	r24, 0x01	; 1
 274:	41 f0       	breq	.+16     	; 0x286 <DIO_voidSetPortDirection+0x1c>
 276:	28 f0       	brcs	.+10     	; 0x282 <DIO_voidSetPortDirection+0x18>
 278:	82 30       	cpi	r24, 0x02	; 2
 27a:	39 f0       	breq	.+14     	; 0x28a <DIO_voidSetPortDirection+0x20>
 27c:	83 30       	cpi	r24, 0x03	; 3
 27e:	39 f0       	breq	.+14     	; 0x28e <DIO_voidSetPortDirection+0x24>
 280:	08 95       	ret
			{
				case PORTA :	DDRA_REG = Direction;	break;
 282:	6a bb       	out	0x1a, r22	; 26
 284:	08 95       	ret
				case PORTB :	DDRB_REG = Direction;	break;
 286:	67 bb       	out	0x17, r22	; 23
 288:	08 95       	ret
				case PORTC :	DDRC_REG = Direction;	break;
 28a:	64 bb       	out	0x14, r22	; 20
 28c:	08 95       	ret
				case PORTD :	DDRD_REG = Direction;	break;
 28e:	61 bb       	out	0x11, r22	; 17
 290:	08 95       	ret
			}
		}
		else if (Direction == INPUT)
 292:	61 11       	cpse	r22, r1
 294:	0f c0       	rjmp	.+30     	; 0x2b4 <DIO_voidSetPortDirection+0x4a>
		{
			switch(Port)
 296:	81 30       	cpi	r24, 0x01	; 1
 298:	41 f0       	breq	.+16     	; 0x2aa <DIO_voidSetPortDirection+0x40>
 29a:	28 f0       	brcs	.+10     	; 0x2a6 <DIO_voidSetPortDirection+0x3c>
 29c:	82 30       	cpi	r24, 0x02	; 2
 29e:	39 f0       	breq	.+14     	; 0x2ae <DIO_voidSetPortDirection+0x44>
 2a0:	83 30       	cpi	r24, 0x03	; 3
 2a2:	39 f0       	breq	.+14     	; 0x2b2 <DIO_voidSetPortDirection+0x48>
 2a4:	08 95       	ret
			{
				case PORTA :	DDRA_REG = Direction;	break;
 2a6:	6a bb       	out	0x1a, r22	; 26
 2a8:	08 95       	ret
				case PORTB :	DDRB_REG = Direction;	break;
 2aa:	67 bb       	out	0x17, r22	; 23
 2ac:	08 95       	ret
				case PORTC :	DDRC_REG = Direction;	break;
 2ae:	64 bb       	out	0x14, r22	; 20
 2b0:	08 95       	ret
				case PORTD :	DDRD_REG = Direction;	break;
 2b2:	61 bb       	out	0x11, r22	; 17
 2b4:	08 95       	ret

000002b6 <DIO_voidSetPortValue>:
	}	
}
void	DIO_voidSetPortValue(u8 Port , u8 Value )        // this o/p port will high or low
{
	/*		Range Check				*/
	if( (Port < 4) )
 2b6:	84 30       	cpi	r24, 0x04	; 4
 2b8:	18 f5       	brcc	.+70     	; 0x300 <DIO_voidSetPortValue+0x4a>
	{
		if(Value == HIGH)
 2ba:	61 30       	cpi	r22, 0x01	; 1
 2bc:	81 f4       	brne	.+32     	; 0x2de <DIO_voidSetPortValue+0x28>
		{
			switch(Port)
 2be:	81 30       	cpi	r24, 0x01	; 1
 2c0:	41 f0       	breq	.+16     	; 0x2d2 <DIO_voidSetPortValue+0x1c>
 2c2:	28 f0       	brcs	.+10     	; 0x2ce <DIO_voidSetPortValue+0x18>
 2c4:	82 30       	cpi	r24, 0x02	; 2
 2c6:	39 f0       	breq	.+14     	; 0x2d6 <DIO_voidSetPortValue+0x20>
 2c8:	83 30       	cpi	r24, 0x03	; 3
 2ca:	39 f0       	breq	.+14     	; 0x2da <DIO_voidSetPortValue+0x24>
 2cc:	08 95       	ret
			{
				case PORTA :	PORTA_REG = Value;	break;
 2ce:	6b bb       	out	0x1b, r22	; 27
 2d0:	08 95       	ret
				case PORTB :	PORTB_REG = Value;	break;
 2d2:	68 bb       	out	0x18, r22	; 24
 2d4:	08 95       	ret
				case PORTC :	PORTC_REG = Value;	break;
 2d6:	65 bb       	out	0x15, r22	; 21
 2d8:	08 95       	ret
				case PORTD :	PORTD_REG = Value;	break;
 2da:	62 bb       	out	0x12, r22	; 18
 2dc:	08 95       	ret
			}
		}
		else if (Value == LOW)
 2de:	61 11       	cpse	r22, r1
 2e0:	0f c0       	rjmp	.+30     	; 0x300 <DIO_voidSetPortValue+0x4a>
		{
			switch(Port)
 2e2:	81 30       	cpi	r24, 0x01	; 1
 2e4:	41 f0       	breq	.+16     	; 0x2f6 <DIO_voidSetPortValue+0x40>
 2e6:	28 f0       	brcs	.+10     	; 0x2f2 <DIO_voidSetPortValue+0x3c>
 2e8:	82 30       	cpi	r24, 0x02	; 2
 2ea:	39 f0       	breq	.+14     	; 0x2fa <DIO_voidSetPortValue+0x44>
 2ec:	83 30       	cpi	r24, 0x03	; 3
 2ee:	39 f0       	breq	.+14     	; 0x2fe <DIO_voidSetPortValue+0x48>
 2f0:	08 95       	ret
			{
				case PORTA :	PORTA_REG = Value;	break;
 2f2:	6b bb       	out	0x1b, r22	; 27
 2f4:	08 95       	ret
				case PORTB :	PORTB_REG = Value;	break;
 2f6:	68 bb       	out	0x18, r22	; 24
 2f8:	08 95       	ret
				case PORTC :	PORTC_REG = Value;	break;
 2fa:	65 bb       	out	0x15, r22	; 21
 2fc:	08 95       	ret
				case PORTD :	PORTD_REG = Value;	break;
 2fe:	62 bb       	out	0x12, r22	; 18
 300:	08 95       	ret

00000302 <_exit>:
 302:	f8 94       	cli

00000304 <__stop_program>:
 304:	ff cf       	rjmp	.-2      	; 0x304 <__stop_program>
